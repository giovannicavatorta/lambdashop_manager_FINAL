{"ast":null,"code":"var _jsxFileName = \"/Users/cwgio97/Documents/React/lambdashop_manager/src/components/LambdaManager/Welcome/WelcomeComponent.jsx\";\nimport React, { Component } from \"react\"; //import { Link } from \"react-router-dom\";\n\nimport AuthenticatorService from \"../../services/authservice.js\"; // Importo il servizio API \"SalutiService\"\n\nimport SalutiService from \"../../services/API/Saluti/Saluti.js\"; // Pagina di benvenuto\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class WelcomeComponent extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      messaggio: \"\"\n    };\n\n    this.getSaluti = () => {\n      SalutiService.getSalutiDataWithParam(AuthenticatorService.getUserInformations()) // Then: una volta che ho ottenuto il risultato, faccio qualcosa\n      // Per esempio: dalla risposta, visualizzo il risultato con un log su console\n      .then(risposta => this.handleAPIResponse(risposta)) // In caso di errore...\n      .catch(errore => this.handleAPIError(errore));\n    };\n\n    this.handleAPIResponse = risposta => {\n      this.setState({\n        messaggio: risposta.data\n      });\n    };\n\n    this.handleAPIError = errore => {\n      console.log(errore.response.data.message);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WelcomeComponent\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Bentornato, \", AuthenticatorService.getUserInformations(), \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Ora puoi accedere alle funzionalit\\xE0. Per navigare, scegli fra le sezioni qui sopra.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: this.state.messaggio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","AuthenticatorService","SalutiService","WelcomeComponent","state","messaggio","getSaluti","getSalutiDataWithParam","getUserInformations","then","risposta","handleAPIResponse","catch","errore","handleAPIError","setState","data","console","log","response","message","render"],"sources":["/Users/cwgio97/Documents/React/lambdashop_manager/src/components/LambdaManager/Welcome/WelcomeComponent.jsx"],"sourcesContent":["import React, { Component } from \"react\";\n//import { Link } from \"react-router-dom\";\nimport AuthenticatorService from \"../../services/authservice.js\";\n// Importo il servizio API \"SalutiService\"\nimport SalutiService from \"../../services/API/Saluti/Saluti.js\";\n\n// Pagina di benvenuto\nexport default class WelcomeComponent extends Component {\n\n    // Creo uno state per visualizzare la risposta del server\n    state = {\n        messaggio: \"\"\n    }\n    render() {\n        return (\n            <div className='WelcomeComponent'>\n                <p>Bentornato, {AuthenticatorService.getUserInformations()}!</p>\n                {/* <p>Ciao {this.props.match.params.userID}! Clicca <Link to='/clienti'>qui</Link> per vedere i clienti disponibili.</p> */}\n                <p> Ora puoi accedere alle funzionalit√†. Per navigare, scegli fra le sezioni qui sopra.</p>\n                {/*<button type=\"button\" className=\"btn btn-primary\" onClick={this.getSaluti}>Visualizza i saluti</button>*/}\n                {/* Visualizzo la risposta del server */}\n                <h4>{this.state.messaggio}</h4>\n            </div>\n        )\n    }\n\n    getSaluti = () => {\n        SalutiService.getSalutiDataWithParam(AuthenticatorService.getUserInformations())\n            // Then: una volta che ho ottenuto il risultato, faccio qualcosa\n            // Per esempio: dalla risposta, visualizzo il risultato con un log su console\n            .then(risposta => this.handleAPIResponse(risposta))\n            // In caso di errore...\n            .catch(errore => this.handleAPIError(errore));\n    }\n\n    // Creo metodo di gestione risposta: devo estrapolare il \"data\" dalla risposta dell'API\n    handleAPIResponse = (risposta) => {\n        this.setState({ messaggio: risposta.data });\n    }\n\n    // Creo metodo di gestione errore\n    handleAPIError = (errore) => {\n        console.log(errore.response.data.message);\n    }\n}"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,+BAAjC,C,CACA;;AACA,OAAOC,aAAP,MAA0B,qCAA1B,C,CAEA;;;AACA,eAAe,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;EAAA;IAAA;IAAA,KAGpDI,KAHoD,GAG5C;MACJC,SAAS,EAAE;IADP,CAH4C;;IAAA,KAmBpDC,SAnBoD,GAmBxC,MAAM;MACdJ,aAAa,CAACK,sBAAd,CAAqCN,oBAAoB,CAACO,mBAArB,EAArC,EACI;MACA;MAFJ,CAGKC,IAHL,CAGUC,QAAQ,IAAI,KAAKC,iBAAL,CAAuBD,QAAvB,CAHtB,EAII;MAJJ,CAKKE,KALL,CAKWC,MAAM,IAAI,KAAKC,cAAL,CAAoBD,MAApB,CALrB;IAMH,CA1BmD;;IAAA,KA6BpDF,iBA7BoD,GA6B/BD,QAAD,IAAc;MAC9B,KAAKK,QAAL,CAAc;QAAEV,SAAS,EAAEK,QAAQ,CAACM;MAAtB,CAAd;IACH,CA/BmD;;IAAA,KAkCpDF,cAlCoD,GAkClCD,MAAD,IAAY;MACzBI,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,QAAP,CAAgBH,IAAhB,CAAqBI,OAAjC;IACH,CApCmD;EAAA;;EAMpDC,MAAM,GAAG;IACL,oBACI;MAAK,SAAS,EAAC,kBAAf;MAAA,wBACI;QAAA,2BAAgBpB,oBAAoB,CAACO,mBAArB,EAAhB;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAGI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ,eAMI;QAAA,UAAK,KAAKJ,KAAL,CAAWC;MAAhB;QAAA;QAAA;QAAA;MAAA,QANJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAUH;;AAjBmD"},"metadata":{},"sourceType":"module"}